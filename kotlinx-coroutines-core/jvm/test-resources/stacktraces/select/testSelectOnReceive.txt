kotlinx.coroutines.channels.ClosedReceiveChannelException: Channel was closed
	at kotlinx.coroutines.channels.BufferedChannel.getReceiveException(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel.processResultSelectReceive(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel.access$processResultSelectReceive(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel$onReceive$2.invoke(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel$onReceive$2.invoke(BufferedChannel.kt)
	at kotlinx.coroutines.selects.SelectImplementation$ClauseData.processResult(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.processResultAndInvokeBlockRecoveringException(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.complete(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.doSelect$suspendImpl(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.doSelect(Select.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest.doSelectOnReceive(StackTraceRecoverySelectTest.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest.access$doSelectOnReceive(StackTraceRecoverySelectTest.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest$testSelectOnReceive$1.invokeSuspend(StackTraceRecoverySelectTest.kt)
	at _COROUTINE._BOUNDARY._(CoroutineDebugging.kt)
	at kotlinx.coroutines.selects.SelectImplementation.processResultAndInvokeBlockRecoveringException(Select.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest$testSelectOnReceive$1.invokeSuspend(StackTraceRecoverySelectTest.kt)
Caused by: kotlinx.coroutines.channels.ClosedReceiveChannelException: Channel was closed
	at kotlinx.coroutines.channels.BufferedChannel.getReceiveException(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel.processResultSelectReceive(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel.access$processResultSelectReceive(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel$onReceive$2.invoke(BufferedChannel.kt)
	at kotlinx.coroutines.channels.BufferedChannel$onReceive$2.invoke(BufferedChannel.kt)
	at kotlinx.coroutines.selects.SelectImplementation$ClauseData.processResult(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.processResultAndInvokeBlockRecoveringException(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.complete(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.doSelect$suspendImpl(Select.kt)
	at kotlinx.coroutines.selects.SelectImplementation.doSelect(Select.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest.doSelectOnReceive(StackTraceRecoverySelectTest.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest.access$doSelectOnReceive(StackTraceRecoverySelectTest.kt)
	at kotlinx.coroutines.exceptions.StackTraceRecoverySelectTest$testSelectOnReceive$1.invokeSuspend(StackTraceRecoverySelectTest.kt)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt)
